package main

import "fmt"

// Задача: что выведет код?
// https://www.notion.so/1-42377714b82841afbf9f51624eb46159?pvs=4
type impl struct{}

type I interface {
	C()
}

func (*impl) C() {}

func A() I {
	return nil

}
func B() I {
	var ret *impl
	return ret
}

func main() {
	a := A()
	b := B()
	fmt.Println(a == b)
}

// Пояснение:
// В функции main:
//
//   * Переменной a присваивается значение, возвращаемое функцией A(), то есть nil с типом I.
//   * Переменной b присваивается значение, возвращаемое функцией B(),
//   то есть также nil, но с типом I, однако это nil от указателя на impl
//
// Важно отметить, что в Go интерфейсное значение состоит из двух частей: указателя на тип и значения.
//В случае A(), интерфейсное значение a содержит nil и указатель на тип nil. В случае B(),
//интерфейсное значение b содержит nil и указатель на тип *impl.
//
//Сравнение a == b вернет false, потому что хотя оба значения содержат nil, типы у них разные:
//у a тип значения nil, а у b тип значения *impl. В Go интерфейсные значения сравниваются по обоим компонентам,
//и если хотя бы один отличается, результат будет false.
